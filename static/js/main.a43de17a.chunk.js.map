{"version":3,"sources":["seasonDisplay.js","Spinnner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","latitude","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Spinner","message","defaultProps","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","longitude","errorMessage","_this2","window","navigator","geolocation","getCurrentPosition","position","setState","coords","err","toString","console","log","seasonDisplay","lat","long","Spinnner","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAGMA,SAAe,CACjBC,OAAQ,CACJC,KAAM,uBACNC,SAAU,OAEdC,OAAO,CACHF,KAAM,mBACNC,SAAU,eAyBHE,EAbO,SAACC,GACnB,IATeC,EAAUC,EASnBC,GATSF,EASUD,EAAMC,UATNC,GASgB,IAAIE,MAAOC,YARxC,GAAKH,EAAQ,EACbD,EAAW,EAAK,SAAW,SAE3BA,EAAW,EAAK,SAAW,UAIVK,EAEJZ,EAAaS,GAA/BP,EAFsBU,EAEtBV,KAAMC,EAFgBS,EAEhBT,SAEb,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IAC9BI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBd,EAAvB,WACZU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBd,EAAxB,aC5BlBe,EAAU,SAACZ,GAEb,OACIO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACVV,EAAMa,SAAW,iBAMlCD,EAAQE,aAAe,CACnBD,QAAS,eAEED,QCXTG,cAEF,SAAAA,EAAYf,GAAO,IAAAgB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMnB,KAGVuB,MAAQ,CACJtB,SAAU,KACVuB,UAAW,KACXC,aAAc,IAPCT,mFAUC,IAAAU,EAAAP,KAChBQ,OAAOC,UAAUC,YAAYC,mBACzB,SAACC,GAAD,OAAcL,EAAKM,SAAS,CACxB/B,SAAU8B,EAASE,OAAOhC,SAC1BuB,UAAWO,EAASE,OAAOT,aAE/B,SAACU,GAAD,OAASR,EAAKM,SAAS,CAACP,aAAcS,EAAIrB,QAAQsB,4DAMtDC,QAAQC,IAAI,uDAIZ,OAAIlB,KAAKI,MAAME,eAAiBN,KAAKI,MAAMtB,SAChCM,EAAAC,EAAAC,cAAA,WAAMU,KAAKI,MAAME,eAEvBN,KAAKI,MAAME,cAAgBN,KAAKI,MAAMtB,SAEnCM,EAAAC,EAAAC,cAAC6B,EAAD,CAAeC,IAAKpB,KAAKI,MAAMtB,SAAUuC,KAAMrB,KAAKI,MAAMC,YAG3DjB,EAAAC,EAAAC,cAACgC,EAAD,CAAS5B,QAAQ,8CApCd6B,IAAMC,WAwCxBC,IAASC,OACLtC,EAAAC,EAAAC,cAACqC,EAAD,MACAC,SACKC,cACG","file":"static/js/main.a43de17a.chunk.js","sourcesContent":["import './SeasonDisplay.css'\nimport React from 'react';\n\nconst seasonConfig = {\n    summer: {\n        text: \"let's hit the beach!\",\n        iconName: 'sun'\n    },\n    winter:{\n        text: \"Burr it is cold!\",\n        iconName: 'snowflake'\n    }\n}\n\nconst getSeason = (latitude, month) => {\n    if (month > 2 && month < 9) {\n        return (latitude > 0) ? 'summer' : 'winter'\n    } else {\n        return (latitude > 0) ? 'winter' : 'summer'\n    }\n};\n\nconst SeasonDisplay = (props) => {\n    const season = getSeason(props.latitude, new Date().getMonth());\n    const {text, iconName} = seasonConfig[season];\n\n    return (\n        <div className={`season-display ${season}`}>\n            <i className={`icon-left massive ${iconName} icon`} />\n            <h1>{text}</h1>\n            <i className={`icon-right massive ${iconName} icon`} />\n        </div>\n    )\n};\n\nexport default SeasonDisplay;","import React from 'react';\n\nconst Spinner = (props)=>{\n\n    return(\n        <div className=\"ui active dimmer\">\n            <div className=\"ui big text loader\">\n                {props.message || 'Loading ...'}\n            </div>\n        </div>\n    )\n};\n\nSpinner.defaultProps = {\n    message: 'Loading ...'\n}\nexport default Spinner;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './seasonDisplay.js';\nimport Spinner from './Spinnner.js';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n    };\n\n    state = {\n        latitude: null,\n        longitude: null,\n        errorMessage: ''\n    };\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => this.setState({\n                latitude: position.coords.latitude,\n                longitude: position.coords.longitude\n            }),\n            (err) => this.setState({errorMessage: err.message.toString()})\n        );\n\n    }\n\n    componentDidUpdate() {\n        console.log('componentDidUpdate')\n    }\n\n    render() {\n        if (this.state.errorMessage && !this.state.latitude) {\n            return <div>{this.state.errorMessage}</div>\n        }\n        if (!this.state.errorMessage && this.state.latitude) {\n            return (\n                <SeasonDisplay lat={this.state.latitude} long={this.state.longitude}/>\n            )\n        }\n        return <Spinner message=\"Please accept the location request\"/>\n    }\n}\n\nReactDOM.render(\n    <App/>,\n    document\n        .querySelector(\n            '#root'\n        )\n);"],"sourceRoot":""}